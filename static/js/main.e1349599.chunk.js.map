{"version":3,"sources":["App.js","Header.js","serviceWorker.js","index.js"],"names":["to_do","Tag","props","class","tag","Page","link","href","title","src","Item","id","element","map","App","handleChange","e","todo_search","search_value","document","getElementById","value","i","length","toString","style","display","toUpperCase","includes","push","Header","alt","height","width","type","placeholder","autocomplete","onChange","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1349599.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nlet to_do = [\r\n    [1, 'React', 'description of what is Test1', 'components, library, Progressive', ['Javascript', 'Library', 'Web'], 'https://reactjs.org/'],\r\n    [2, 'Django', 'description of what is Test2', 'secure, scalable', ['Python','framework', 'Web'], 'https://www.djangoproject.com/'],\r\n    [3, 'Nodejs', 'description of what is Test3', 'asynchronous, scalable ', ['Javascript', 'Runtime', 'Web'], 'https://nodejs.org/en/'],\r\n    [4, 'Laravel', 'description of what is Test4', 'syntax', ['PHP', 'Web'], 'https://laravel.com/'],\r\n    [5, '.Net Core', 'description of what is Test5', 'Multiplatform, easy', ['C++', 'C#', 'Web'], 'https://dotnet.microsoft.com/download/dotnet-core'],\r\n    [6, 'Vuejs', 'description of what is Test6', 'progressive, versatile', ['JavaScript', 'Web'], 'https://vuejs.org/'],\r\n    [7, 'Tailwind', 'description of what is Test7', 'customizable, low level', ['CSS', 'Web'], 'https://tailwindcss.com/#what-is-tailwind']\r\n  ];\r\n\r\nfunction Tag(props){\r\n  return (\r\n    <span class='inline-block bg-gray-200 rounded-full px-2 text-sm font-semibold text-gray-700 m-1'>#{props.tag}</span>\r\n  );\r\n}\r\n\r\nfunction Page(props){\r\n  if (props.link) {\r\n    return (<a href={props.link} title=\"See on GitHub\">\r\n      <img class='w-8 absolute right-0 mt-5 mr-2' src='https://img.icons8.com/windows/452/github.png'></img>\r\n    </a>)\r\n  }\r\n  return;\r\n}\r\n\r\nfunction Item(props) {\r\n  return (\r\n    <div class=\"max-w-md rounded overflow-hidden shadow-lg m-6 bg-white hover:bg xl:w-1/3 sm:w-full md:w-1/3 relative\" id={props.element[0]}>\r\n      <Page link={props.element[5]}/>\r\n      <div class='w-full h-2 bg-green-400'></div>\r\n      <div class='px-6 py-4'>\r\n        <div class='font-bold text-xl mb-2 truncate'>{props.element[1]}</div>\r\n        <p class='text-gray-700 text-base h-24 overflow-hidden'>\r\n          {props.element[2]}\r\n        </p>\r\n      </div>\r\n      <div class='px-6 py-2 bg-indigo-600'>\r\n        {props.element[4].map((tag) => <Tag tag={tag} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div class=\"flex items-start justify-center flex-wrap bg-gray-200 z-0\">\r\n      { to_do.map((element) => <Item element={ element } />) }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport {to_do};\r\nexport default App;\r\n","import React from \"react\";\r\nimport {to_do} from './App';\r\n\r\nfunction handleChange(e) {\r\n    let todo_search = [];\r\n    let search_value = document.getElementById(\"search\").value;\r\n\r\n    for (var i = 0; i < to_do.length; i++) {\r\n      var element = document.getElementById(to_do[i][0].toString());\r\n      element.style.display = \"none\";\r\n    }\r\n\r\n    for (var i = 0; i < to_do.length; i++) {\r\n      if (to_do[i][1].toUpperCase().includes(search_value.toUpperCase())) {\r\n        todo_search.push(to_do[i]);\r\n      }\r\n      if (to_do[i][2].toUpperCase().includes(search_value.toUpperCase())) {\r\n        todo_search.push(to_do[i]);\r\n      }\r\n      if (to_do[i][3].toUpperCase().includes(search_value.toUpperCase())) {\r\n        todo_search.push(to_do[i]);\r\n      }\r\n      for (var tag = 0; tag < to_do[i][4].length; tag++) {\r\n        if (to_do[i][4][tag].toUpperCase().includes(search_value.toUpperCase())) {\r\n          todo_search.push(to_do[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (var i = 0; i < todo_search.length; i++) {\r\n      var element = document.getElementById(todo_search[i][0].toString());\r\n      element.style.display = \"block\";\r\n    }\r\n}\r\n\r\nfunction Header() {\r\n  return (\r\n    <div class=\"w-full fixed bg-gray-600 z-40\">\r\n      <div class=\"w-full absolute top-0 bg-gray-800\">\r\n        <form class=\"w-full\">\r\n          <div class=\"w-full flex items-end border-b border-b-2 border-teal-500 py-3\">\r\n            <div class=\"text-gray-700 text-center w-15 mx-6\">\r\n              <img src=\"https://cdn1.iconfinder.com/data/icons/summer-7/512/travel_lighthouse-512.png\" alt=\"Smiley face\" height=\"42\" width=\"42\"></img>\r\n            </div>\r\n            <input id=\"search\" class=\"xl:w-1/4 md:w-3/6 sm:w-3/6 ml-6 rounded p-2 text-gray-700\" type=\"search\" placeholder=\"Search...\" autocomplete=\"off\" onChange={handleChange}/>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles.css' // <- change './index.css' to './styles.css'\r\nimport App from './App';\r\nimport Header from './Header';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Header />, document.getElementById('header'));\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}